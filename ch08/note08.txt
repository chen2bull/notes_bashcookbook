-------------------------------------------------------------
8.1 用sort排序
$somecommands | sort
-r 按逆序排列，-f或--ignore-case可以忽略大小写
-------------------------------------------------------------
8.2 排列数值
-n 排列数值
第七列-f7是用户使用的shell，uniq -c后显示各个shell使用的用户数。
$cut -d ':' -f7 /etc/passwd | sort | uniq-c | sort -rn
如果只是要列出所有的被用户使用的shell，用-u
$cut -d ':' -f7 /etc/passwd | sort -u
-------------------------------------------------------------
8.3 排列IP地址
$sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n ipaddr.list
对ipaddr.list中的ip地址进行排序
-t 指定用点（.）将每行分成几个field
-k 1,1n 表示用从第一个field开始，第一个field结束的字符串来排序。
   	 其中n指定了以数值的形式来排列。
后面的-k 2,2n用
-------------------------------------------------------------
8.4 截取每行的一部分
ps au | cut -c 12-15
截取当前运行的所有进程ID
	# awk可以完全代替同时使用 -d 和 -f的cut命令
	#可以同时使用 -d 和 -f
	#-d 指定分割符，-f指定要显示的域
	#如以下命令 以‘:’为分割符，取出第三到第七个field
	#$cat /etc/passwd | cut -d ':' -f 3-7
	#注意：cut 只擅长处理 以一个字符为分割符 的文件。
如果是由N个字符串分割的文件，还是用awk比较好。
而且awk还能提供很好的字符串格式化的功能。
因此，cut -c 和cut -b 是cut命令唯一有意义的两种用法。
-------------------------------------------------------------
8.5 去除重复的行
用uniq  $cat myfile | uniq
-------------------------------------------------------------
8.6 打包文件 压缩文件（全宇宙的Linux都支持的打包和压缩命令）
$tar -cvf backupfile.tar bash_code/
打包bash_code/目录下的所有文件到backupfile.tar（只打包不压缩）
（并不是所有平台的tar都支持压缩选项，不推荐使用废旧的-z来压缩(.tgz或.tar.gz)
用-j可以有最高级别的压缩(文件后缀为.tar.bz2)）
$gzip backupfile.tar
压缩backupfile.tar到backupfile.tar.gz
$zip -rl backupfile.zip bash_code/
打包的同时转换UNIX换行符到DOS换行符
另外，用ar打包生成c语言的库文件
-------------------------------------------------------------
8.7 解压缩/解包文件（可以先用file命令看该文件的类型）
$tar -xvf backupfile.tar
除了zip和rar包不能用以外，基本上通用（用unzip解压缩dos的包）
-------------------------------------------------------------
8.8 显示文件解压后在本目录中添加的文件夹和文件
$tar tf backupfile.tar | awk -F '{print $1}' | uniq
$tar tf backupfile.tar	#只显示包中的文件目录，不解压
-------------------------------------------------------------
8.9 字符转换
$cat be.fore | tr ';' ','  > af.ter	#把分号都转换成逗号
$cat be.fore | tr ';:.!?' ',' > af.ter	#把参数一指定的字符都转换成逗号
$cat be.fore | tr -s ' '  # 把多个空格转换成一个空格
$cat be.fore | tr -s 'ha'  # 把haha，hahaha等等转换成一个ha
-------------------------------------------------------------
8.10 大小写转换
$tr 'A-Z' 'a-z' < be.fore > af.ter
$tr '[:upper:]' '[:lower:]' < be.fore > af.ter
-------------------------------------------------------------
8.11 将DOS 文件转换成 Linux Format
tr -d '\r' < file.dos > file.txt
-------------------------------------------------------------
8.12 Translate the odd characters backup to simple ASCII like this:
$tr '\221\222\223\224\226\227' '\047\047""--' < odd.txt > plain.txt
典型的功能：从Word文档中提取ASCII字符（只适用与全英文的）
-------------------------------------------------------------
8.13 wc（word counter）计算文件行数，单词数，字符数
$wc data_file #计算文件行数，单词数，字符数
$wc -l data_file #行数
$wc -w data_file #单词数
$wc -c data_file #字符数
-------------------------------------------------------------
8.14 用fmt可以批量排版纯文本（只能进行简单的任务，意义不大,见fmt --help）
-------------------------------------------------------------
8.15 用less命令代替more命令
-------------------------------------------------------------
