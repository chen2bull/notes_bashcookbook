------------------------------------------------------------------ 
11.1 date的格式化输出
ISO_8601_1='%Y-%m-%d %T %Z'	#这个变量的定义一般放在配置文件/脚本中
$date "+$ISO_8601_1" 		#使用变量进行格式化的方法
$date -d '2005-11-06' "+$ISO_8601_1" 	#(用-d选项)格式化特定的时间
$date -d 'last week Monday 12:00:00' '+%Y-%m-%d' 
#用指定的格式输出上周一的日期
-d选项还可以用以下单词
today,yesterday,this Monday,next Monday,last Monday,next 2 weeks,
+2 weeks,2 weeks ago,-2 weeks,+4 days,3 months 1 day ago,.....
------------------------------------------------------------------
11.4 将date以新纪元秒的形式来显示
date '+%s'
------------------------------------------------------------------ 
11.5 将新纪元秒转换成日期
EPOCH=1131173989
date -d "1970-01-01 UTC $EPOCH seconds" "+%Y-%m-%d %T %z" #本地时间
date --utc -d "1970-01-01 UTC $EPOCH seconds" "+%Y-%m-%d %T %z"  #UTC时间
------------------------------------------------------------------
11.7 日期的计算
CORRECTION='172800'		#两天的秒数
bad_date='Jan 2 05:13:05'	#
bad_epoch=$(date -d "$bad_date" '+%s') #转换成新纪元秒
good_epoch=$(( bad_epoch + $CORRECTION )) #日期的相加
#good_date是转换好的日子
good_date=$(date -d "1970-01-01 UTC $bad_epoch seconds" "+%Y-%m-%d %T")
------------------------------------------------------------------ 
11.8 时区、夏令时间和闰年
噩梦，见 date --help和 man date
------------------------------------------------------------------ 
11.9 在每个月第N个星期三用cron 做某事
大部分的cron不能处理这个问题。用以下方法解决：在第N周的每一天都检
查当天是否为星期三。
#Vixie Cron
# Min  Hour	DoM	Mnth	DoW	Program
# 0-59 0-23	1-31	1-12 	0-7
# 以下配置项中，00分钟，23点，第8到14天，*在这个位置代表所有月份，
# Wed是周三 后面是要执行的任务
00 23 8-14 * Wed [ "$(date '+%a')" == "Wed" ] && /path/to/command
cron 的配置文件在/etc/crontab，或者在/var/spool/cron下添加对应用户的配置文件。
注意cron中执行的命令要带全路径或则在配置文件的开头指定目录
------------------------------------------------------------------ 
11.10 输出月历和年历
cal 10 2006
cal 2012
------------------------------------------------------------------ 
