------------------------------------------------------------
6.1 在bash中使用整数运算(注意等号两边不要有空格)
COUNT=$((COUNT+5+MAX*2))	#另外$(2**8)的结果是256
除非是命令行参数$1,$# 等,否则没有必要在变量前面加$
let COUNT+=5+MAX*2
let后边的参数每一个参数都是一个语句，如：let X+=5*2 Y-=3*2
------------------------------------------------------------
6.2 分支(注意if语句后边的空格不能少)
if [ $# -lt 3 ] ;then
printf "%b" "Error.Not enough arguments.\n"
fi
------------------------------------------------------------
6.3 测试文件是否存在、是否有权限、是否为目录
checkfile.sh
-e存在，-r可读，-w可写，-x可执行，-O文件拥有者，-s长度不为零
(has size)，-g Set-GID，-k粘住位（注意不是-t），-u Set-UID
-d目录，-f文件
-b块设备，-c字符设备，-p命名管道,-S套接字，-h和-L符号链接
------------------------------------------------------------
6.4 测试不止一个条件(-a,-o)
if [ -r $FILE -a -w $FILE ] ;then cat $FILE;fi
if [ -r "$FN" -a \( -f "$FN" -o -p "$FN" \) ];then ...
------------------------------------------------------------
6.5 测试字符串
checkstr.sh	两种测试方法
-z测试字符串是否为空
------------------------------------------------------------
6.6 测试是否相等
strvsnum.sh
用=或==测试字符串是否相等(" 05 " 不等于“5”),<,<=,>,>=,!=
用-eq测试整数是否相等,(" 05 " 等于“5”),-lt,-le,-gt,-ge,-ne
------------------------------------------------------------
6.7 通配符测试
（注意：通配符两边不要有“”，否则会被认为是该字符串 ）
（注意：在[[]]中不需要也不能用转义）
if [[ "$FILE" == *.jpg ]]...		#

#先用shopt -s extglob,然后就可以使用以下的通配符模式
if [[ "$FILE == *.@(jpg|jpeg)"]]...	# *.jpg或*.jpeg
if [[ "$FILE == *.*(j)"]]...	# *.或*.j或*.jj或*.jjj...
if [[ "$FILE == *.+(j)"]]...	#     *.j或*.jj或*.jjj...
if [[ "$FILE == *.?(j)"]]...	# *.或*.j
if [[ "$FILE == *.!(j)"]]...	# 除了*.j以外的东西
------------------------------------------------------------
6.8 正则表达式的测试
trackmatch.sh
用 =~ 测试字符串是否匹配一个正则表达式
匹配了以后，$BASH_REMATCH[1]存放着匹配正则表达式的第一个分组的字符串，
$BASH_REMATCH[0]则表示整个被匹配的字符串
------------------------------------------------------------
6.10 循环(注意条件中不能填 1，与C等不同，
bash中while中的条件为0时才进行循环，因为正确执行在Bash中返回值为0)
while (( COUNT < MAX ))
do ... done
while [ -x "$LOCKFILE" ]
do ... done
while read LINE_TEXT
do ... done
------------------------------------------------------------
6.11 用read遍历循环的方法,看一个例子：
$svn status somedir（能看看到目录下的文件状态）
M      somedir/amin.c
?      somedir/bmin.c
?      somedir/cmin.c
A      somedir/some.c
?      somedir/max.c
如果想要删除那些不再库里面的文件，可以用以下的方法：
svn status somedir | \
while read STATUS filename
do
	if [[ $STATUS == \? ]];then
	   echo "$filename"
	   rm -rf "$filename"
	fi
done 或者以下方法
svn status somedir | grep '^?' | cut -c 8- | \
    while read FN; do echo "$FN";rm -rf "$FN";done
------------------------------------------------------------
6.12 for循环和foreach循环
for (( i=0; i<10;i++));do echo $i;done
for i in dirA dirB dirC;do ... ;done
------------------------------------------------------------
6.14 case in 语句
case $FN in
     *.gif) dosomething1 "$FN"
     ;;
     *.png) dosomething2 "$FN"
     ;;
     *)printf "File not supported:%s" "$FN"
     ;;
esac效果同下
if [[ $FN == *.gif ]] ;then
   dosomething1 "$FN"
elif [[ $FN == *.png ]] ; then
   dosomething2 "$FN"
else
   printf "File not supported:%s" "$FN"
fi
------------------------------------------------------------
6.15 解析命令行参数
dashes.sh	可以指定字符和字符个数，输出N个字符组成的一条线
------------------------------------------------------------
6.16 创建简单的Menus
dbinit.1.sh	数据库初始化？？
dbinit.2.sh	数据库初始化？？
select VALUE in $SOME_LIST
do
    echo something
    # 一些处理
done
注意：在前面的章节讲过修改PS3就可以修改select的提示字符串
------------------------------------------------------------
6.17 实现计算器(两个)
func_calc.sh
rpncalc.sh
------------------------------------------------------------
