------------------------------------------------------------------
10.1 创建守护进程(在用SSH登陆时非常实用)
nohup mydaemon_script 0<&- 1>/dev/null 2&1 &
或者
nohup mydaemon_script >>/var/log/myadmin.log 2>&1 <&- &
用0<&-将破折号重定向到标准输入的意思是：关闭标准输入。
将1重定向到一个文件，再将2也重定向到1的那个文件。
>>是追加的方式重定向1到一个文件
重定向到/dev/null的内容就是丢弃的内容。
------------------------------------------------------------------
10.2 用bash文件作为配置文件（配合source命令）
配置文件执行完毕以后，变量的值不会继续保存，而是丢弃。
用source命令执行配置文件
如：source ~/.bashrc
. ~/.bashrc和$include ~/.bashrc也有同样的作用
（要十分注意的是，$include中的$也是命令的一部分，而不是命令提示符）
（上面命令是有一定的风险的，他们都是一个敞开的大门。
在source的时候要十分小心）
------------------------------------------------------------------
10.5  定义函数
func_max.1.sh
别忘了参数检查和必要时添加参数
在函数中，$FUNCNAME 变量是函数名(仅在函数执行是有值)
$0是脚本的名字(不含路径)
函数中的局部变量(有local声明的)在函数执行完以后不再存在
函数中的全部变量(没有local声明的)，在定义该函数的文件中一直有效
source一个文件以后，该文件定义的函数和全局变量会一直有效
------------------------------------------------------------------
10.6 使用信号
trap -l 或者 kill -l 会列出所有的信号
Note that the exit status of your script will be 128+signal number 
if the command was terminated by signal signal number.
hard_to_kill.sh
$kill -INT 1377
向进程号为1377的程序，发送INT信号
$kill -USR1 %1
向jobs号（用jobs命令查看）为1的进程，发送USR1信号
(用户定义的信号常常以USR加数值来命名)
------------------------------------------------------------------
10.7 alias的使用（执行命令时的优先级:函数 > alias > builtin）
alias emacs='emacs -nw'
alias ls='ls --color=auto'
执行完alias以后
执行emacs等于执行emacs -nw后面的命令
注意：以alias作为变量的名字是不合法的（为了安全性）
用unalias emacs 来取消之前alias的效果
------------------------------------------------------------------
10.8 避免alias和函数起作用
$builtin echo test
用builtin的echo来执行命令（不会把echo看做是函数或者alias）
$\echo test
不会吧echo看做是alias，如果echo被定义成一个函数则执行该函数，
否则执行builtin的echo
可以定义以下函数改变cd的行为，并且避免alias
function cd ( ){
    if [[ $1 = "..." ]]
    then
        builtin cd ../..
    else
        builtin cd $1
    fi
}
------------------------------------------------------------------

